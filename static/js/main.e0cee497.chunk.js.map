{"version":3,"sources":["images/logo/logo.svg","components/Header/Header.js","utils/api.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","api","login","this","_server","server","_auth","auth","_cohort","cohort","_path","request","then","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","_handleResponse","data","body","JSON","stringify","name","about","description","link","cardId","avatar","Card","onCardClick","likes","onClick","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","catch","err","console","error","getInitialCards","map","card","_id","Footer","PopupWithForm","title","submitText","children","isOpen","onClose","noValidate","form","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0cee497.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import logo from '../../images/logo/logo.svg';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        className=\"header__logo\"\r\n        src={logo}\r\n        alt=\"Логотип\"\r\n      />\r\n    </header>  \r\n  )\r\n}\r\n\r\nexport default Header;","class Api {\r\n  constructor(login) {\r\n    this._server = login.server;\r\n    this._auth = login.auth;\r\n    this._cohort = login.cohort;\r\n    this._path = `${this._server}${this._cohort}`;\r\n  }\r\n\r\n  _handleResponse(request) {\r\n    return request.then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    const request = fetch(`${this._path}/cards`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._auth\r\n      }\r\n    });\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  getUserInfo() {\r\n    const request = fetch(`${this._path}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  sendUserInfo(data) {\r\n    const request = fetch(`${this._path}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.description\r\n      })\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  addNewCard(data) {\r\n    const request = fetch(`${this._path}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    const request = fetch(`${this._path}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    const request = fetch(`${this._path}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    const request = fetch(`${this._path}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n\r\n  editAvatar(data) {\r\n    const request = fetch(`${this._path}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._auth,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n    return this._handleResponse(request);\r\n  }\r\n}\r\n\r\nconst login = {\r\n  \"server\": \"https://mesto.nomoreparties.co/v1/\",\r\n  \"auth\": \"ca5f4285-decb-4fbb-b094-52f199996ef3\",\r\n  \"cohort\": \"cohort-19\"\r\n}\r\n\r\nconst api = new Api(login);\r\nexport default api;","function Card({onCardClick, link, name, likes}) {\r\n\r\n  function handleClick() {\r\n    onCardClick({link, name});\r\n  }\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <img \r\n        className=\"element__image\"\r\n        src={ link }\r\n        alt={ name }\r\n        onClick={ handleClick }\r\n      />\r\n      <div className=\"element__description\">\r\n        <h3 className=\"element__title\">{ name }</h3>\r\n        <button type=\"button\" className=\"element__trash-icon\"></button>\r\n        <div className=\"element__likes\">\r\n          <button type=\"button\" className=\"element__like-icon\"></button>\r\n          <span className=\"element__like-count\">{ likes.length }</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import api from '../../utils/api';\r\nimport Card from '../Card/Card';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\r\n  const [userName, setUserName] = useState('');\r\n  const [userDescription, setUserDescription] = useState('');\r\n  const [userAvatar, setUserAvatar] = useState('');\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getUserInfo()\r\n      .then(res => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    api.getInitialCards()\r\n      .then(res => {\r\n        const cards = res.map(card => {\r\n          return {\r\n            _id: card._id,\r\n            name: card.name,\r\n            link: card.link,\r\n            likes: card.likes\r\n          }\r\n        })\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      })    \r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__overlay\" onClick={ onEditAvatar }>\r\n          <img \r\n            className=\"profile__avatar\" \r\n            src={ userAvatar } \r\n            alt=\"Фото профиля\"\r\n          />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__edit\">\r\n            <h1 className=\"profile__title\">{ userName }</h1>\r\n            <button \r\n              type=\"button\" \r\n              className=\"profile__edit-btn\"\r\n              onClick={ onEditProfile }>  \r\n            </button>\r\n          </div>\r\n          <p className=\"profile__description\">{ userDescription }</p>\r\n        </div>\r\n        <button \r\n          type=\"button\" \r\n          className=\"profile__add-btn\"\r\n          onClick={ onAddPlace }> \r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {cards.map(card => <Card key={ card._id } { ...card } onCardClick={ onCardClick }/>)}\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\n  \r\nexport default Main;","function Footer(props) {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020. Матвеев Олег</p>\r\n    </footer>   \r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({title, name, submitText='Сохранить', children, isOpen, onClose}) {\r\n  return (\r\n    <section className={ `popup popup_type-${name} ${ isOpen ? 'popup_is-opened' : '' }` }>\r\n      <div className=\"popup__container\">\r\n        <button onClick={ onClose } type=\"button\" className=\"popup__close\"></button>\r\n        <h3 className=\"popup__title\">{title}</h3>\r\n        <form \r\n          name={name} \r\n          className={`popup__input-form popup__input-form_type-${name}`} \r\n          noValidate>\r\n            { children }\r\n            <button type=\"submit\" form={ name } className={`popup__input-btn popup__input-btn_type-${name}`}>\r\n              { submitText }\r\n            </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","function ImagePopup({isOpen, onClose, card}) {\r\n  return (\r\n    <section className={ `popup popup_type-image ${ isOpen ? 'popup_is-opened' : '' }`}>\r\n    <div className=\"popup__container popup__container_type-image\">\r\n      <button onClick={ onClose } type=\"button\" className=\"popup__close\"></button>\r\n      <img className=\"popup__fullpic\" src={ card.link } alt={ card.name }/>\r\n      <h3 className=\"popup__title popup__title_type-image\">{ card.name }</h3>\r\n    </div>\r\n  </section>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import './App.css';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport Footer from './Footer/Footer';\r\nimport PopupWithForm from './PopupWithForm/PopupWithForm';\r\nimport ImagePopup from './ImagePopup/ImagePopup';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  \r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  \r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setIsImagePopupOpen(true);\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"page\">\r\n      <Header/>\r\n      <Main\r\n        onEditProfile={ handleEditProfileClick }\r\n        onAddPlace={ handleAddPlaceClick }\r\n        onEditAvatar={ handleEditAvatarClick }\r\n        onCardClick={ handleCardClick }\r\n      />\r\n      <Footer/>\r\n      <PopupWithForm\r\n        name=\"profile\"\r\n        title=\"Редактировать профиль\"\r\n        isOpen={ isEditProfilePopupOpen }\r\n        onClose={ closeAllPopups }\r\n      >\r\n        <input type=\"text\" placeholder=\"Имя\" name=\"name\" className=\"popup__input-text popup__input-text_name\"\r\n            minLength=\"2\" maxLength=\"40\" required/>\r\n        <span className=\"popup__error popup__error_name\">Введите имя</span>\r\n        <input type=\"text\" placeholder=\"Род занятий\" name=\"description\"\r\n            className=\"popup__input-text popup__input-text_description\" minLength=\"2\" maxLength=\"200\" required/>\r\n          <span className=\"popup__error popup__error_description\">Введите род\r\n            занятий</span>\r\n      </PopupWithForm>\r\n      <PopupWithForm \r\n        name=\"card\"\r\n        title=\"Новое место\"\r\n        isOpen={ isAddPlacePopupOpen }\r\n        onClose={ closeAllPopups }\r\n      >\r\n      <input type=\"text\" placeholder=\"Название\" name=\"name\" className=\"popup__input-text popup__input-text_title\"\r\n            minLength=\"2\" maxLength=\"30\" required/>\r\n          <span\r\n            className=\"popup__error popup__error_name\"\r\n          >\r\n            Заполните это поле\r\n          </span>\r\n          <input type=\"url\" placeholder=\"Сыылка на картинку\" name=\"link\"\r\n            className=\"popup__input-text popup__input-text_link\" required/>\r\n          <span className=\"popup__error popup__error_link\">Введите URL картинки</span>\r\n      </PopupWithForm>\r\n      <PopupWithForm name=\"delete\" title=\"Вы уверены?\" submitText=\"Да\" onClose={ closeAllPopups }/>\r\n      <PopupWithForm \r\n        name=\"update-avatar\"\r\n        title=\"Обновить аватар\"\r\n        isOpen={ isEditAvatarPopupOpen }\r\n        onClose={ closeAllPopups }\r\n      >\r\n      <input type=\"url\" placeholder=\"Ссылка на аватарку...\" name=\"avatar\" className=\"popup__input-text\" required/>\r\n          <span className=\"popup__error popup__error_avatar\">Введите URL аватарки</span>\r\n      </PopupWithForm>\r\n      <ImagePopup \r\n        card={ selectedCard }\r\n        isOpen={ isImagePopupOpen }\r\n        onClose={ closeAllPopups }\r\n      />\r\n  </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}